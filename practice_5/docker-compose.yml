services:
  db:
    image: postgres:16
    container_name: pg16
    environment:
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: 123
      POSTGRES_DB: predict_db   
    ports:
      - "5433:5432"             
    volumes:
      - pg_data:/var/lib/postgresql/data
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U ${POSTGRES_USER} -d ${POSTGRES_DB}"]
      interval: 5s
      timeout: 3s
      retries: 10

  pgadmin:
    image: dpage/pgadmin4:8
    container_name: pgadmin
    environment:
      PGADMIN_DEFAULT_EMAIL: admin@example.com
      PGADMIN_DEFAULT_PASSWORD: admin
    ports:
      - "5050:80"             # http://localhost:5050
    depends_on:
      db:
        condition: service_healthy

  api:
    container_name: api-practice_5
    build:
      context: .
      dockerfile: dockerfile.api
    image: image-practice_5
    environment:
      SENTIMENT_MODEL: "distilbert-base-uncased-finetuned-sst-2-english"
      HF_HUB_ENABLE_HF_TRANSFER: "0"
      PYTHONPATH: "/code"
      HF_HOME: "/root/.cache/huggingface"
      # DB / Alembic
      POSTGRES_USER: ${POSTGRES_USER}
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD}
      POSTGRES_DB: ${POSTGRES_DB}
      DB_HOST: ${DB_HOST}
      DB_PORT: ${DB_PORT}
      DATABASE_URL: ${DATABASE_URL}
    working_dir: /code
    volumes:
      - ./:/code
      - hf_cache:/root/.cache/huggingface
    ports:
      - "8000:8000"
    depends_on:
      db:
        condition: service_healthy
    command: ["/bin/bash", "-lc", "bash /code/entrypoint.sh"]
    restart: unless-stopped

volumes:
  pg_data:
  hf_cache: